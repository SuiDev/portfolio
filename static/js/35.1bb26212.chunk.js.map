{"version":3,"file":"static/js/35.1bb26212.chunk.js","mappings":"6NAaMA,GAAUC,EAAAA,EAAAA,aAAW,SAACC,EAAOC,GAEjC,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAMA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KAMA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KAMMC,EAAqBC,IAAAA,OAAa,CACtCC,QAAS,CACP,eAAgB,qCAElBC,aAAc,SA0BhB,OACE,+BACE,UAAC,IAAD,CACEC,GAAI,CACFC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,UAAW,IACXC,EAAG,EACHC,UAAW,SACX,uBAAwB,CACtBC,EAAG,EACHL,MAAO,UAbb,WAiBE,UAAC,IAAD,CACEM,QAAS,EACTC,GAAI,EAFN,WAIE,SAAC,IAAD,CACEC,QAAQ,KACRC,UAAU,KAFZ,2EAMA,UAAC,IAAD,CACEd,GAAI,CACFY,GAAI,GAFR,sIAME,kBANF,+EASA,SAAC,IAAD,CACEG,GAAG,UACHC,MAAM,qBACNH,QAAQ,WACRI,UAAQ,EACRC,MAAO9B,EACP+B,SAjGe,SAACC,GACxB/B,EAAW+B,EAAEC,OAAOH,WAkGd,SAAC,IAAD,CACEH,GAAG,OACHC,MAAM,qBACNH,QAAQ,WACRI,UAAQ,EACRC,MAAO5B,EACP6B,SAnGY,SAACC,GACrB7B,EAAQ6B,EAAEC,OAAOH,WAoGX,SAAC,IAAD,CACEH,GAAG,OACHC,MAAM,6CACNH,QAAQ,WACRI,UAAQ,EACRC,MAAO1B,EACP2B,SArGY,SAACC,GACrB3B,EAAQ2B,EAAEC,OAAOH,WAsGX,SAAC,IAAD,CACEH,GAAG,cACHC,MAAM,mDACNH,QAAQ,WACRI,UAAQ,EACRC,MAAOxB,EACPyB,SAvGe,SAACC,GACxBzB,EAAWyB,EAAEC,OAAOH,QAuGZI,WAAS,EACTC,KAAM,QAGV,UAAC,IAAD,CACEC,UAAU,MACVb,QAAS,EAFX,WAKE,SAAC,IAAD,CACEzB,IAAKA,EACLc,GAAI,CACFK,MAAO,OAETQ,QAAQ,WACRY,MAAM,YACNC,WAAW,SAAC,IAAD,IACXC,QAAS,WACP1C,EAAM2C,mBAAkB,IAT5B,6CAeA,SAAC,IAAD,CACE5B,GAAI,CACFK,MAAO,OAETQ,QAAQ,YACRgB,SAAS,SAAC,IAAD,IACTF,QAAS,YAzHO,WAExB,GAAIvC,GAAWE,GAAQE,GAAQE,EAAS,CACtC,IAAMoC,EAAO,CACXC,SAAW,YACXC,KAAO,uBAAU5C,EAAU,oBAAYE,EAAO,0BAAaE,EAAO,oBAAYE,GAGhFE,EACGqC,KAAKC,sCAAiCJ,GACtCK,MAAK,WACJC,MAAM,wKACNnD,EAAM2C,mBAAkB,MAEzBS,OAAM,WACLD,MAAM,mMAGVA,MAAM,wFAwGEE,IAPJ,qCAkBV","sources":["components/organisms/Contact.jsx"],"sourcesContent":["import React, { forwardRef, useState } from \"react\";\n\n/** Material UI Modules */\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\n\nimport axios from \"axios\";\n\nconst Contact = forwardRef((props, ref) => {\n  // 会社名の入力値の保持\n  const [company, setCompany] = useState(\"\");\n  const handleSetCompany = (e) => {\n    setCompany(e.target.value);\n  }\n\n  // 氏名の入力値の保持\n  const [name, setName] = useState(\"\");\n  const handleSetName = (e) => {\n    setName(e.target.value);\n  }\n\n  // メールアドレスの入力値の保持\n  const [mail, setMail] = useState(\"\");\n  const handleSetMail = (e) => {\n    setMail(e.target.value);\n  }\n\n  // 問い合わせ内容の入力値の保持\n  const [content, setContent] = useState(\"\");\n  const handleSetContent = (e) => {\n    setContent(e.target.value);\n  }\n\n  // 問い合わせAPIのヘッダーとレスポンスタイプを設定します。\n  const ContactRequestBase = axios.create({\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    responseType: \"json\"  \n  });\n  \n  // 問い合わせを送信します。\n  const handleSendMessage = () => {\n    // 必須項目が入力されていることをチェックします。\n    if (company && name && mail && content) {\n      const data = {\n        username : \"Portfolio\",\n        text : \"会社名: \" + company + \"\\n 氏名: \" + name + \"\\n メール: \" + mail + \"\\n 内容: \" + content\n      };\n\n      ContactRequestBase\n        .post(process.env.REACT_APP_SLACK_URL, data)\n        .then(() => {\n          alert(\"お問い合わせありがとうございます。\\n送信が完了しました。\")\n          props.setHasOpenContact(false)\n        })\n        .catch(() =>  {\n          alert(\"送信に失敗しました。お手数ですが、TwitterのDMからお願いいたします。\")\n        });\n    } else {\n      alert(\"未入力の必須項目があります。\")\n    }\n  }\n\n  return (\n    <>\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: 400,\n          bgcolor: \"background.paper\",\n          boxShadow: 500,\n          p: 5,\n          textAlign: \"center\",\n          \"& .MuiTextField-root\": {\n            m: 1,\n            width: \"400px\",\n          }\n        }}\n      >\n        <Stack\n          spacing={4}\n          mt={1}\n        >\n          <Typography\n            variant=\"h6\"\n            component=\"h2\"\n          >\n            お問い合わせフォーム\n          </Typography>\n          <Typography\n            sx={{\n              mt: 2\n            }}\n          >\n            連絡をご希望の方は、必須項目を入力のうえ\n            <br />\n            送信をお願いいたします。\n          </Typography>\n          <TextField\n            id=\"company\"\n            label=\"会社名\"\n            variant=\"standard\"\n            required\n            value={company}\n            onChange={handleSetCompany}\n          />\n          <TextField\n            id=\"name\"\n            label=\"お名前\"\n            variant=\"standard\"\n            required\n            value={name}\n            onChange={handleSetName}\n          />\n          <TextField\n            id=\"mail\"\n            label=\"メールアドレス\"\n            variant=\"standard\"\n            required\n            value={mail}\n            onChange={handleSetMail}\n          />\n          <TextField\n            id=\"discription\"\n            label=\"お問い合わせ内容\"\n            variant=\"standard\"\n            required\n            value={content}\n            onChange={handleSetContent}\n            multiline\n            rows={8}\n          />\n        </Stack>\n        <Stack\n          direction=\"row\"\n          spacing={3}\n        >\n          {/** キャンセルボタン */}\n          <Button\n            ref={ref}\n            sx={{ \n              width: \"50%\"\n            }}\n            variant=\"outlined\"\n            color=\"secondary\"\n            startIcon={<CancelIcon />}\n            onClick={() => {\n              props.setHasOpenContact(false)\n            }}\n          >\n            キャンセル\n          </Button>\n          {/** 送信ボタン */}\n          <Button\n            sx={{\n              width: \"50%\"\n            }}\n            variant=\"contained\"\n            endIcon={<SendIcon />}\n            onClick={() => {\n              handleSendMessage()\n            }}\n          >\n            送信\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  )\n});\n\nexport default Contact;\n"],"names":["Contact","forwardRef","props","ref","useState","company","setCompany","name","setName","mail","setMail","content","setContent","ContactRequestBase","axios","headers","responseType","sx","position","top","left","transform","width","bgcolor","boxShadow","p","textAlign","m","spacing","mt","variant","component","id","label","required","value","onChange","e","target","multiline","rows","direction","color","startIcon","onClick","setHasOpenContact","endIcon","data","username","text","post","process","then","alert","catch","handleSendMessage"],"sourceRoot":""}