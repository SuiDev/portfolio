{"version":3,"file":"static/js/35.4a28a565.chunk.js","mappings":"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","sources":["components/organisms/Contact.jsx"],"sourcesContent":["import React, { forwardRef, useState } from \"react\";\nimport axios from \"axios\";\n\n/** Material UI Modules */\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { MediaContext } from \"components/pages/Home\";\nimport customMedia from \"components/utils/styledMediaConfig\";\n\nconst Contact = forwardRef((props, ref) => {\n  // 会社名の入力値の保持\n  const [company, setCompany] = useState(\"\");\n  const handleSetCompany = (e) => {\n    setCompany(e.target.value);\n  }\n\n  // 氏名の入力値の保持\n  const [name, setName] = useState(\"\");\n  const handleSetName = (e) => {\n    setName(e.target.value);\n  }\n\n  // メールアドレスの入力値の保持\n  const [mail, setMail] = useState(\"\");\n  const handleSetMail = (e) => {\n    setMail(e.target.value);\n  }\n\n  // 問い合わせ内容の入力値の保持\n  const [content, setContent] = useState(\"\");\n  const handleSetContent = (e) => {\n    setContent(e.target.value);\n  }\n\n  // 問い合わせAPIのヘッダーとレスポンスタイプを設定します。\n  const ContactRequestBase = axios.create({\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    responseType: \"json\"  \n  });\n  \n  // 問い合わせを送信します。\n  const handleSendMessage = () => {\n    // 必須項目が入力されていることをチェックします。\n    if (company && name && mail && content) {\n      const data = {\n        username : \"Portfolio\",\n        text : \"会社名: \" + company + \"\\n 氏名: \" + name + \"\\n メール: \" + mail + \"\\n 内容: \" + content\n      };\n\n      ContactRequestBase\n        .post(process.env.REACT_APP_SLACK_URL, data)\n        .then(() => {\n          alert(\"お問い合わせありがとうございます。\\n送信が完了しました。\")\n          props.setHasOpenContact(false)\n        })\n        .catch(() =>  {\n          alert(\"送信に失敗しました。お手数ですが、TwitterのDMからお願いいたします。\")\n        });\n    } else {\n      alert(\"未入力の必須項目があります。\")\n    }\n  }\n\n  const Contents = () => (\n    <>\n      <Stack\n      spacing={4}\n      mt={1}\n      >\n        <Typography\n          variant=\"h6\"\n          component=\"h2\"\n        >\n          お問い合わせフォーム\n        </Typography>\n        <Typography\n          sx={{\n            mt: 2\n          }}\n        >\n          連絡をご希望の方は、必須項目を入力のうえ\n          <br />\n          送信をお願いいたします。\n        </Typography>\n        <TextField\n          id=\"company\"\n          label=\"会社名\"\n          variant=\"standard\"\n          required\n          value={company}\n          onChange={handleSetCompany}\n        />\n        <TextField\n          id=\"name\"\n          label=\"お名前\"\n          variant=\"standard\"\n          required\n          value={name}\n          onChange={handleSetName}\n        />\n        <TextField\n          id=\"mail\"\n          label=\"メールアドレス\"\n          variant=\"standard\"\n          required\n          value={mail}\n          onChange={handleSetMail}\n        />\n        <TextField\n          id=\"discription\"\n          label=\"お問い合わせ内容\"\n          variant=\"standard\"\n          required\n          value={content}\n          onChange={handleSetContent}\n          multiline\n          rows={8}\n        />\n      </Stack>\n      <Stack\n        direction=\"row\"\n        spacing={3}\n      >\n        {/** キャンセルボタン */}\n        <Button\n          ref={ref}\n          sx={{ \n            width: \"50%\"\n          }}\n          variant=\"outlined\"\n          color=\"secondary\"\n          startIcon={<CancelIcon />}\n          onClick={() => {\n            props.setHasOpenContact(false)\n          }}\n        >\n          キャンセル\n        </Button>\n        {/** 送信ボタン */}\n        <Button\n          sx={{\n            width: \"50%\"\n          }}\n          variant=\"contained\"\n          endIcon={<SendIcon />}\n          onClick={() => {\n            handleSendMessage()\n          }}\n        >\n          送信\n        </Button>\n      </Stack>\n    </>\n  );\n\n  return (\n    <>\n      <MediaContext.Consumer>\n        {media =>\n          <>\n            {!media.isMobileScreen ?\n              // スマホ以外のとき\n              <>\n                <Box\n                  sx={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: 400,\n                    bgcolor: \"background.paper\",\n                    boxShadow: 500,\n                    p: 5,\n                    textAlign: \"center\",\n                    \"& .MuiTextField-root\": {\n                      m: 1,\n                      width: \"400px\",\n                    }\n                  }}\n                >\n                  <Contents />\n                </Box>\n              </>\n              :\n              // スマホのとき\n              <>\n                <Box\n                  sx={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: \"80%\",\n                    bgcolor: \"background.paper\",\n                    boxShadow: 500,\n                    p: 5,\n                    textAlign: \"center\",\n                    \"& .MuiTextField-root\": {\n                      m: 1,\n                      width: \"100%\",\n                    }\n                  }}\n                >\n                  <Contents />\n                </Box>\n              </>\n            }\n          </>\n        }\n      </MediaContext.Consumer>\n    </>\n  )\n});\n\nexport default Contact;\n"],"names":["Contact","forwardRef","props","ref","useState","company","setCompany","handleSetCompany","e","target","value","name","setName","handleSetName","mail","setMail","handleSetMail","content","setContent","handleSetContent","ContactRequestBase","axios","headers","responseType","Contents","spacing","mt","variant","component","sx","id","label","required","onChange","multiline","rows","direction","width","color","startIcon","onClick","setHasOpenContact","endIcon","data","username","text","post","process","then","alert","catch","handleSendMessage","MediaContext","media","isMobileScreen","position","top","left","transform","bgcolor","boxShadow","p","textAlign","m"],"sourceRoot":""}